<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fanqie.dc.domain.InnActive">
   <resultMap id="mapId" type="com.fanqie.dc.domain.InnActive">
        <result column="id" property="id"/>
        <result column="inn_id" property="innId"/>
        <result column="inn_name" property="innName"/>
        <result column="mobile" property="mobile"/>
        <result column="status" property="status"/>
        <result column="order_num" property="orderNum"/>
        <result column="check_in_num" property="checkInNum"/>
        <result column="check_out_num" property="checkOutNum"/>
        <result column="msg_num" property="msgNum"/>
        <result column="operate_num" property="operateNum"/>
        <result column="create_date" property="createDate"/>
   </resultMap>

    <select id="findDayInnActive" parameterType="java.util.Map" resultMap="mapId">
        SELECT
        SUM (T .orders) AS order_num,
        SUM (T .checkIns) AS check_in_num,
        SUM (T .checkOuts) AS check_out_num,
        SUM (T .msgNum) AS msg_num,
        SUM (T .opNum) AS operate_num,
        inn_id,inn.name as inn_name,inn.contact as mobile
        FROM
        (
        SELECT
        COUNT (DISTINCT M . ID) AS orders,
        0 AS checkIns,
        0 AS checkOuts,
        0 AS msgNum,
        0 AS opNum,
        r.inn_id AS inn_id
        FROM
        tomato_inn_room_main_order M
        INNER JOIN tomato_inn_room_order o ON M . ID = o.main_id
        INNER JOIN tomato_inn_room r ON r. ID = o.room_id
        WHERE M .ordered_at  BETWEEN '${startDate}'  AND  '${endDate}'
        GROUP BY inn_id
        UNION ALL
        SELECT
        0 AS orders,
        COUNT (DISTINCT M . ID) AS checkIns,
        0 AS checkOuts,
        0 AS msgNum,
        0 AS opNum,
        r.inn_id AS inn_id
        FROM
        tomato_inn_room_main_check_in M
        INNER JOIN tomato_inn_room_check_in o ON M . ID = o.main_id
        INNER JOIN tomato_inn_room r ON r. ID = o.room_id
        WHERE M .created_at BETWEEN '${startDate}'  AND  '${endDate}'
        GROUP BY  inn_id
        UNION ALL
        SELECT
        0 AS orders,
        0 AS checkIns,
        COUNT (DISTINCT M . ID) AS checkOuts,
        0 AS msgNum,
        0 AS opNum,
        r.inn_id AS inn_id
        FROM
        tomato_inn_room_main_check_out M
        INNER JOIN tomato_inn_room_check_out o ON M . ID = o.main_id
        INNER JOIN tomato_inn_room r ON r. ID = o.room_id
        WHERE
        M .created_at BETWEEN '${startDate}'  AND  '${endDate}'
        GROUP BY inn_id
        UNION ALL
        SELECT
        0 AS orders,
        0 AS checkIns,
        COUNT (DISTINCT M . ID) AS checkOuts,
        0 AS msgNum,
        0 AS opNum,
        r.inn_id AS inn_id
        FROM
        tomato_inn_room_main_check_out M
        INNER JOIN tomato_inn_room_check_out o ON M . ID = o.main_id
        INNER JOIN tomato_inn_room r ON r. ID = o.room_id
        WHERE M .created_at BETWEEN '${startDate}'  AND  '${endDate}'
        GROUP BY inn_id
        UNION ALL
        SELECT
        0 AS orders,
        0 AS checkIns,
        0 AS checkOuts,
        SUM (l.send_num) AS msgNum,
        0 AS opNum,
        l.inn_id AS inn_id
        FROM
        tomato_msg_log l
        WHERE
        l.send_time BETWEEN '${startDate}'  AND  '${endDate}'
        GROUP BY inn_id
        UNION ALL
        SELECT
        0 AS orders,
        0 AS checkIns,
        0 AS checkOuts,
        0 AS msgNum,
        COUNT (l. ID) AS opNum,
        l.inn_id AS inn_id
        FROM
        tomato_inn_log l
        WHERE
        l.operate_time BETWEEN '${startDate}'  AND  '${endDate}'
        GROUP BY
        inn_id
        ) T
        LEFT JOIN tomato_inn inn ON inn.id = T.inn_id
        GROUP BY inn_id,inn.name,inn.contact;
    </select>

    <insert id="saveInnActive" parameterType="java.util.Map">
        insert into inn_active(id,inn_id,inn_name,mobile,create_date,order_num,check_in_num,check_out_num,msg_num,operate_num)
        values
        <if test="list.size() > 0">
            <foreach collection="list" item="v" separator=","  >
                ( '${v.id}','${v.innId}','${v.mobile}','${v.createDate}',#{v.orderNum},#{v.checkInNum},#{v.checkOutNum},#{v.msgNum},#{v.operateNum})
            </foreach>
        </if>
    </insert>


</mapper>